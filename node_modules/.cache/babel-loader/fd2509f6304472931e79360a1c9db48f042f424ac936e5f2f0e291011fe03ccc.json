{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1b4ec450\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"card mt-5 min-card-width\",\n  style: {\n    \"width\": \"auto\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"card-title\"\n}, \"Upload Files\", -1));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"\",\n  class: \"upload-icon\",\n  src: \"/upload-icon.png\"\n})], -1));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"\",\n  for: \"fileInput\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, [/*#__PURE__*/_createTextVNode(\"Drag and Drop or \"), /*#__PURE__*/_createElementVNode(\"u\", {\n  class: \"choose-file-button\"\n}, \"choose files\"), /*#__PURE__*/_createTextVNode(\".\")])], -1));\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"container border-1 shadow-sm mt-3\"\n};\nconst _hoisted_8 = {\n  width: \"100%\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  rowspan: \"2\",\n  class: \"column-file-type-icon\"\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  key: 1,\n  rowspan: \"2\",\n  class: \"column-file-type-icon\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"\",\n  class: \"custom_thumbnail\",\n  src: \"/invalid-filetype-icon.png\"\n}, null, -1));\nconst _hoisted_13 = [_hoisted_12];\nconst _hoisted_14 = {\n  rowspan: \"2\",\n  class: \"column-file-size\"\n};\nconst _hoisted_15 = {\n  rowspan: \"2\",\n  class: \"column-file-type-icon\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"\",\n  class: \"custom_thumbnail\",\n  src: \"/red_x.png\"\n}, null, -1));\nconst _hoisted_18 = {\n  key: 0,\n  class: \"file-upload valid-file-type\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"file-upload invalid-file-type\"\n};\nconst _hoisted_20 = {\n  class: \"container bg-light\"\n};\nconst _hoisted_21 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", {\n    class: \"dropzone-container\",\n    onDragleave: _cache[1] || (_cache[1] = (...args) => $options.dragleave && $options.dragleave(...args)),\n    onDragover: _cache[2] || (_cache[2] = (...args) => $options.dragover && $options.dragover(...args)),\n    onDrop: _cache[3] || (_cache[3] = (...args) => $options.drop && $options.drop(...args))\n  }, [_createElementVNode(\"input\", {\n    id: \"fileInput\",\n    ref: \"file\",\n    accept: \".gif, .jpeg, .jpg, .mkv, .mov, .mp4, .mpeg, .png\",\n    class: \"hidden-input\",\n    multiple: \"\",\n    name: \"file\",\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 544), _hoisted_4, _hoisted_5], 32), $data.files.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.files, file => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: file.name\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_createElementVNode(\"tr\", null, [file.valid_file ? (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [_createElementVNode(\"img\", {\n      alt: \"\",\n      class: \"custom_thumbnail\",\n      src: $data.icons[file.name.split('.').pop()]\n    }, null, 8, _hoisted_10)])) : (_openBlock(), _createElementBlock(\"td\", _hoisted_11, _hoisted_13)), _createElementVNode(\"td\", null, _toDisplayString(file.name) + \" \", 1), _createElementVNode(\"td\", _hoisted_14, _toDisplayString(Math.round(file.size / 1000) + \"Kb\") + \" \", 1), _createElementVNode(\"td\", _hoisted_15, [_createElementVNode(\"button\", {\n      class: \"remove-file-button\",\n      type: \"button\",\n      onClick: $event => $options.removeFile($data.files.indexOf(file))\n    }, [_hoisted_17, _createTextVNode(\"  \")], 8, _hoisted_16)])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [file.valid_file ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, \" Valid file. \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, \" Invalid file. \"))])])])])]);\n  }), 128)), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"button\", {\n    class: \"base-button clear-button\",\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.clearFiles && $options.clearFiles(...args))\n  }, \" Clear \"), _createElementVNode(\"button\", {\n    disabled: $data.run_status,\n    class: \"base-button run-button\",\n    type: \"button\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.submitFiles && $options.submitFiles(...args))\n  }, \" Run \", 8, _hoisted_21)])])) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"mappings":"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","names":["class","style","_createElementVNode","alt","src","for","width","rowspan","_hoisted_12","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onDragleave","$options","onDragover","onDrop","id","ref","accept","multiple","name","type","onChange","_hoisted_4","_hoisted_5","$data","length","_Fragment","file","key","_hoisted_7","_hoisted_8","valid_file","_hoisted_9","split","pop","_hoisted_11","_hoisted_14","Math","round","size","_hoisted_15","onClick","indexOf","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","disabled"],"sourceRoot":"","sources":["/home/student/Desktop/Nemo/Heroku/NemoFrontendGit/Nemo-Frontend/src/components/UploadFiles.vue"],"sourcesContent":["<template>\n  <div class=\"card mt-5 min-card-width\" style=\"width: auto\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Upload Files</h5>\n      <div class=\"dropzone-container\" @dragleave=\"dragleave\" @dragover=\"dragover\" @drop=\"drop\">\n        <input\n            id=\"fileInput\"\n            ref=\"file\"\n            accept=\".gif, .jpeg, .jpg, .mkv, .mov, .mp4, .mpeg, .png\"\n            class=\"hidden-input\"\n            multiple\n            name=\"file\"\n            type=\"file\"\n            @change=\"handleFileUpload\"\n        >\n        <div><img alt=\"\" class=upload-icon src=\"/upload-icon.png\"/></div>\n        <label class=\"\" for=\"fileInput\">\n          <span>Drag and Drop or <u class=\"choose-file-button\">choose files</u>.</span>\n        </label>\n      </div>\n      <div v-if=\"files.length\">\n        <div v-for=\"file in files\" :key=\"file.name\">\n          <div class=\"container border-1 shadow-sm mt-3\">\n            <table width=\"100%\">\n              <tr>\n                <td rowspan=\"2\" class=\"column-file-type-icon\" v-if=\"file.valid_file\">\n                  <img alt=\"\" class=\"custom_thumbnail\" v-bind:src=\"icons[file.name.split('.').pop()]\"/>\n                </td>\n                <td rowspan=\"2\" class=\"column-file-type-icon\" v-else>\n                  <img alt=\"\" class=\"custom_thumbnail\" src=\"/invalid-filetype-icon.png\"/>\n                </td>\n                <td>{{ file.name }}&nbsp;</td>\n                <td rowspan=\"2\" class=\"column-file-size\">{{ Math.round(file.size / 1000) + \"Kb\" }}&nbsp;</td>\n                <td rowspan=\"2\" class=\"column-file-type-icon\">\n                  <button class=\"remove-file-button\" type=\"button\" @click=\"removeFile(files.indexOf(file))\">\n                    <img alt=\"\" class=\"custom_thumbnail\" src=\"/red_x.png\"/>&nbsp;\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div v-if=\"file.valid_file\" class=\"file-upload valid-file-type\">\n                    Valid file.\n                  </div>\n                  <div v-else class=\"file-upload invalid-file-type\">\n                    Invalid file.\n                  </div>\n                </td>\n              </tr>\n            </table>\n          </div>\n        </div>\n        <div class=\"container bg-light\">\n          <button class=\"base-button clear-button\" type=\"button\" @click=\"clearFiles\">\n            Clear\n          </button>\n          <button :disabled=\"run_status\" class=\"base-button run-button\" type=\"button\" @click=\"submitFiles\">\n            Run\n          </button>\n      </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      run_status: false,\n      isDragging: false,\n      files: [],\n      files2: {},\n      icons: {\n        gif: '/gif-icon.png',\n        jpg: '/jpeg-icon.png',\n        jpeg: '/jpeg-icon.png',\n        mkv: '/mkv-icon.png',\n        mov: '/mov-icon.png',\n        mp4: '/mp4-icon.png',\n        mpeg: '/mpeg-icon.png',\n        png: '/png-icon.png'\n      }\n    }\n  },\n  methods: {\n    addFile(file) {\n      if (!(this.fileExists(file[\"name\"]))) {\n        if (this.getFileExtension(file.name) in this.icons) {\n          file[\"valid_file\"] = true\n          this.files.push(file)\n        } else {\n          file[\"valid_file\"] = false\n          this.run_status = true\n          this.files.push(file)\n        }\n      }\n    },\n    clearFiles() {\n      this.files = []\n      this.run_status = false\n    },\n    dragover(e) {\n      // Prevent Files From Being Opened\n      e.preventDefault();\n      this.isDragging = true;\n    },\n    dragleave() {\n      this.isDragging = false;\n    },\n    drop(e) {\n      // Prevent Files From Being Opened\n      e.preventDefault()\n      // Mark Valid / Invalid File Types\n      if (e.dataTransfer.files) {\n        [...e.dataTransfer.files].forEach((file) => {\n          this.addFile(file)\n        })\n      }\n      this.isDragging = false\n      console.log(this.files)\n    },\n    fileExists(name) {\n      console.log(name)\n      for (let i = 0; i < this.files.length; i++) {\n        if (this.files[i][\"name\"] === name) {\n          return true\n        }\n      }\n    },\n    getFileExtension(filename) {\n      return filename.split('.').pop()\n    },\n    handleFileUpload() {\n      let files = [...this.$refs.file.files]\n      for (let i = 0; i < files.length; i++) {\n        this.addFile(files[i])\n      }\n\n      // this.files.push.apply(this.files, [...this.$refs.file.files])\n      console.log(this.files)\n\n\n    },\n    removeFile(i) {\n      this.files.splice(i, 1);\n      this.verifyFiles()\n      console.log(this.run_status)\n    },\n    submitFiles() {\n      console.log(\"The Run Button Was pressed.\")\n      // Prepare Form Data Containing Files\n      // var formData = new FormData();\n      // for (let i = 0; i < this.files.length; i++) {\n      //   formData.append(this.files[i].name, this.files[i]);\n      //   console.log('>> formData >>', formData)\n      // }\n      let formData = new FormData()\n      let selectedFile = this.files[0]\n      formData.append(\"fileNameCorrect\", selectedFile)\n\n      axios.post('https://nemo-backend.herokuapp.com/', formData, {\n      // axios.post('http://127.0.0.1:5000', formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          }\n        })\n        .then(response => console.log(response))\n        .catch(error => console.log(error))\n      // axios\n      //     //.post('http://127.0.0.1:5000', {\n      //     .post('https://nemo-backend.herokuapp.com/', {\n      //       firstName: 'Ben',\n      //       lastName: 'Kenobi'\n      //     })\n      //     .then(response => console.log(response))\n      //     .catch(error => console.log(error))\n      // Axios Request to Back-End Server\n\n      // axios({\n      //   method: \"POST\",\n      //   url: 'https://nemo-backend.herokuapp.com/',\n      //   //url: 'https://nemo-backend.herokuapp.com/',\n      //   data: formData,\n      //   headers: {\"Content-Type\": \"multipart/form-data\"}\n      // })\n      //     .then(function () {\n      //       console.log(this.FormData)\n      //     })\n      //     .catch(function () {\n      //       console.log(\"failure\");\n      //     });\n    },\n    verifyFiles() {\n      for (let i = 0; i < this.files.length; i++) {\n        if (!(this.files[i][\"valid_file\"])) {\n          this.run_status = true\n          break\n        }\n        else {\n          this.run_status = false\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.base-button {\n  color:black;\n  border-radius: 25px;\n  border-style: solid;\n  border-color: #d8d8d8;\n  border-width: thin;\n  margin-top: 2rem;\n  padding-right: 20px;\n  padding-left: 20px;\n  background-color: #ffffff;\n}\n\n.min-card-width {\n  min-width: 15em;\n}\n\n.choose-file-button {\n  cursor: pointer;\n  font-style: italic;\n  color: #adcdec;\n}\n\n.clear-button {\n  float: left;\n}\n\n.custom_thumbnail {\n  width: 30px;\n  height: 30px;\n}\n\n.column-file-type-icon {\n  width: 50px;\n  justify-content: center;\n}\n\n.column-file-size {\n  width: 50px;\n  justify-content: left;\n}\n\n.dropzone-container {\n    padding: 1rem;\n    background: #f7fafc;\n    border: 2px dashed #e2e8f0;\n    margin-top: 1rem;\n    text-align: center;\n}\n\n.file-upload {\n    font-style: italic;\n    font-size: 12px;\n}\n\n.hidden-input {\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    width: 1px;\n    height: 1px;\n}\n\n.invalid-file-type {\n  color: red;\n}\n\n.remove-file-button {\n  border: none;\n  background-color: white;\n}\n\n.run-button {\n  float: right;\n}\n\n.upload-icon {\n  opacity: 0.5;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 0.5em;\n}\n\n.valid-file-type {\n  color: green;\n}\n\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}