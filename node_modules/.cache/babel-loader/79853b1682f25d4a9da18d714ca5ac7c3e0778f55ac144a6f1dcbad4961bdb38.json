{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      isDragging: false,\n      files: [],\n      icons: {\n        gif: '/gif-icon.png',\n        jpg: '/jpeg-icon.png',\n        jpeg: '/jpeg-icon.png',\n        mkv: '/mkv-icon.png',\n        mov: '/mov-icon.png',\n        mp4: '/mp4-icon.png',\n        mpeg: '/mpeg-icon.png',\n        png: '/png-icon.png'\n      }\n    };\n  },\n  methods: {\n    dragover(e) {\n      e.preventDefault();\n      this.isDragging = true;\n    },\n    dragleave() {\n      this.isDragging = false;\n    },\n    drop(e) {\n      e.preventDefault();\n      this.$refs.file.files = e.dataTransfer.files;\n      this.handleFileUpload();\n      this.isDragging = false;\n    },\n    handleFileUpload() {\n      this.files = [...this.$refs.file.files];\n    },\n    removeFile(i) {\n      this.files.splice(i, 1);\n    },\n    submitFiles() {\n      console.log(\"The Run Button Was pressed.\");\n      // Prepare Form Data Containing Files\n      let formData = new FormData();\n      for (let i = 0; i < this.files.length; i++) {\n        let file = this.files[i];\n        formData.append(this.name, file);\n      }\n      // Axios Request to Back-End Server\n      axios({\n        method: \"POST\",\n        url: 'https://nemo-backend.herokuapp.com/',\n        data: formData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function () {\n        console.log(\"SUCCESS!!\");\n      }).catch(function () {\n        console.log(\"FAILURE!!\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAuDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;QACLC,GAAG,EAAE,eAAe;QACpBC,GAAG,EAAE,gBAAgB;QACrBC,IAAI,EAAE,gBAAgB;QACtBC,GAAG,EAAE,eAAe;QACpBC,GAAG,EAAE,eAAe;QACpBC,GAAG,EAAE,eAAe;QACpBC,IAAI,EAAE,gBAAgB;QACtBC,GAAG,EAAE;MACP;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,CAACC,CAAC,EAAE;MACVA,CAAC,CAACC,cAAc,EAAE;MAClB,IAAI,CAACd,UAAS,GAAI,IAAI;IACxB,CAAC;IACDe,SAAS,GAAG;MACV,IAAI,CAACf,UAAS,GAAI,KAAK;IACzB,CAAC;IACDgB,IAAI,CAACH,CAAC,EAAE;MACNA,CAAC,CAACC,cAAc,EAAE;MAClB,IAAI,CAACG,KAAK,CAACC,IAAI,CAACjB,KAAI,GAAIY,CAAC,CAACM,YAAY,CAAClB,KAAK;MAC5C,IAAI,CAACmB,gBAAgB,EAAE;MACvB,IAAI,CAACpB,UAAS,GAAI,KAAK;IACzB,CAAC;IACDoB,gBAAgB,GAAG;MACjB,IAAI,CAACnB,KAAI,GAAI,CAAC,GAAG,IAAI,CAACgB,KAAK,CAACC,IAAI,CAACjB,KAAK,CAAC;IACzC,CAAC;IACDoB,UAAU,CAACC,CAAC,EAAE;MACZ,IAAI,CAACrB,KAAK,CAACsB,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IACDE,WAAW,GAAG;MACZC,OAAO,CAACC,GAAG,CAAC,6BAA6B;MACzC;MACA,IAAIC,QAAO,GAAI,IAAIC,QAAQ,EAAE;MAC7B,KAAK,IAAIN,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACrB,KAAK,CAAC4B,MAAM,EAAEP,CAAC,EAAE,EAAE;QAC1C,IAAIJ,IAAG,GAAI,IAAI,CAACjB,KAAK,CAACqB,CAAC,CAAC;QACxBK,QAAQ,CAACG,MAAM,CAAC,IAAI,CAACC,IAAI,EAAEb,IAAI,CAAC;MAClC;MACA;MACApB,KAAK,CAAC;QACJkC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,qCAAqC;QAC1ClC,IAAI,EAAE4B,QAAQ;QACdO,OAAO,EAAE;UAAC,cAAc,EAAE;QAAqB;MACjD,CAAC,EACIC,IAAI,CAAC,YAAY;QAChBV,OAAO,CAACC,GAAG,CAAC,WAAW;MACzB,CAAC,EACAU,KAAK,CAAC,YAAY;QACjBX,OAAO,CAACC,GAAG,CAAC,WAAW;MACzB,CAAC,CAAC;IACR;EACF;AACF","names":["axios","data","isDragging","files","icons","gif","jpg","jpeg","mkv","mov","mp4","mpeg","png","methods","dragover","e","preventDefault","dragleave","drop","$refs","file","dataTransfer","handleFileUpload","removeFile","i","splice","submitFiles","console","log","formData","FormData","length","append","name","method","url","headers","then","catch"],"sourceRoot":"","sources":["C:\\SCHOOL\\Nemo\\Nemo-Frontend\\nemo_frontend\\src\\components\\UploadFiles.vue"],"sourcesContent":["<template>\r\n  <div class=\"card mt-5\" style=\"width: auto\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">Upload Files</h5>\r\n      <div class=\"dropzone-container\" @dragleave=\"dragleave\" @dragover=\"dragover\" @drop=\"drop\">\r\n        <input\r\n            id=\"fileInput\"\r\n            ref=\"file\"\r\n            accept=\".gif, .jpeg, .jpg, .mkv, .mov, .mp4, .mpeg, .png\"\r\n            class=\"hidden-input\"\r\n            multiple\r\n            name=\"file\"\r\n            type=\"file\"\r\n            @change=\"handleFileUpload\"\r\n        >\r\n        <div><img alt=\"\" class=upload-icon src=\"/upload-icon.png\"/></div>\r\n        <label class=\"\" for=\"fileInput\">\r\n          <span>Drag and Drop or <u class=\"choose-file-button\">choose files</u></span>\r\n        </label>\r\n      </div>\r\n      <div v-if=\"files.length\">\r\n        <div v-for=\"file in files\" :key=\"file.name\">\r\n          <div class=\"container border-1 shadow-sm mt-3\">\r\n            <table width=\"100%\">\r\n              <tr>\r\n                <td rowspan=\"2\">\r\n                  <img alt=\"\" class=\"custom_thumbnail\" v-bind:src=\"icons[file.name.split('.').pop()]\"/>&nbsp;\r\n                </td>\r\n                <td>{{ file.name }}&nbsp;</td>\r\n                <td>{{ Math.round(file.size / 1000) + \"Kb\" }}&nbsp;</td>\r\n                <td rowspan=\"2\" align=\"right\">\r\n                  <button class=\"remove-file-button\" type=\"button\" @click=\"removeFile(files.indexOf(file))\">\r\n                    <img alt=\"\" class=\"custom_thumbnail\" src=\"/red_x.png\"/>&nbsp;\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Success!!!!\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div class=\"container bg-light\">\r\n          <button class=\"run-button\" type=\"button\" @click=\"submitFiles\">\r\n            Run\r\n          </button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isDragging: false,\r\n      files: [],\r\n      icons: {\r\n        gif: '/gif-icon.png',\r\n        jpg: '/jpeg-icon.png',\r\n        jpeg: '/jpeg-icon.png',\r\n        mkv: '/mkv-icon.png',\r\n        mov: '/mov-icon.png',\r\n        mp4: '/mp4-icon.png',\r\n        mpeg: '/mpeg-icon.png',\r\n        png: '/png-icon.png'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    dragover(e) {\r\n      e.preventDefault();\r\n      this.isDragging = true;\r\n    },\r\n    dragleave() {\r\n      this.isDragging = false;\r\n    },\r\n    drop(e) {\r\n      e.preventDefault();\r\n      this.$refs.file.files = e.dataTransfer.files;\r\n      this.handleFileUpload();\r\n      this.isDragging = false;\r\n    },\r\n    handleFileUpload() {\r\n      this.files = [...this.$refs.file.files];\r\n    },\r\n    removeFile(i) {\r\n      this.files.splice(i, 1);\r\n    },\r\n    submitFiles() {\r\n      console.log(\"The Run Button Was pressed.\")\r\n      // Prepare Form Data Containing Files\r\n      let formData = new FormData();\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        let file = this.files[i];\r\n        formData.append(this.name, file);\r\n      }\r\n      // Axios Request to Back-End Server\r\n      axios({\r\n        method: \"POST\",\r\n        url: 'https://nemo-backend.herokuapp.com/',\r\n        data: formData,\r\n        headers: {\"Content-Type\": \"multipart/form-data\"}\r\n      })\r\n          .then(function () {\r\n            console.log(\"SUCCESS!!\")\r\n          })\r\n          .catch(function () {\r\n            console.log(\"FAILURE!!\")\r\n          });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.upload-icon {\r\n  opacity: 0.5;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-bottom: 0.5em;\r\n}\r\n\r\n.choose-file-button {\r\n  cursor: pointer;\r\n  font-style: italic;\r\n  color: #adcdec;\r\n}\r\n\r\n.remove-file-button {\r\n  border: none;\r\n  background-color: white;\r\n  justify-content: center;\r\n}\r\n\r\n.run-button {\r\n  border: dashed;\r\n  border-radius: 25px;\r\n  margin-top: 2rem;\r\n  padding-right: 20px;\r\n  padding-left: 20px;\r\n  background-color: #f7fafc;\r\n  float: right;\r\n}\r\n\r\n.custom_thumbnail {\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n}\r\n\r\n.dropzone-container {\r\n    padding: 1rem;\r\n    background: #f7fafc;\r\n    border: 2px dashed #e2e8f0;\r\n    margin-top: 1rem;\r\n    text-align: center;\r\n}\r\n\r\n.hidden-input {\r\n    opacity: 0;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n}\r\n\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}