{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      isDragging: false,\n      files: [],\n      icons: {\n        gif: '/gif-icon.png',\n        jpg: '/jpeg-icon.png',\n        jpeg: '/jpeg-icon.png',\n        mkv: '/mkv-icon.png',\n        mov: '/mov-icon.png',\n        mp4: '/mp4-icon.png',\n        mpeg: '/mpeg-icon.png',\n        png: '/png-icon.png'\n      }\n    };\n  },\n  methods: {\n    dragover(e) {\n      e.preventDefault();\n      this.isDragging = true;\n    },\n    dragleave() {\n      this.isDragging = false;\n    },\n    drop(e) {\n      e.preventDefault();\n      this.$refs.file.files = e.dataTransfer.files;\n      this.handleFileUpload();\n      this.isDragging = false;\n    },\n    handleFileUpload() {\n      this.files = [...this.$refs.file.files];\n    },\n    removeFile(i) {\n      this.files.splice(i, 1);\n    },\n    submitFiles() {\n      console.log(\"The Run Button Was pressed.\");\n      // Prepare Form Data Containing Files\n      var formData = new FormData();\n      for (let i = 0; i < this.files.length; i++) {\n        formData.append(this.files[i].name, this.files[i]);\n        console.log('>> formData >>', formData);\n      }\n      axios.post('http://127.0.0.1:5000', this.formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => console.log(response)).catch(error => console.log(error));\n      // Axios Request to Back-End Server\n\n      // axios({\n      //   method: \"POST\",\n      //   url: 'https://nemo-backend.herokuapp.com/',\n      //   //url: 'https://nemo-backend.herokuapp.com/',\n      //   data: formData,\n      //   headers: {\"Content-Type\": \"multipart/form-data\"}\n      // })\n      //     .then(function () {\n      //       console.log(this.FormData)\n      //     })\n      //     .catch(function () {\n      //       console.log(\"failure\");\n      //     });\n    }\n  }\n};","map":{"version":3,"mappings":"AAuDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;QACLC,GAAG,EAAE,eAAe;QACpBC,GAAG,EAAE,gBAAgB;QACrBC,IAAI,EAAE,gBAAgB;QACtBC,GAAG,EAAE,eAAe;QACpBC,GAAG,EAAE,eAAe;QACpBC,GAAG,EAAE,eAAe;QACpBC,IAAI,EAAE,gBAAgB;QACtBC,GAAG,EAAE;MACP;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,CAACC,CAAC,EAAE;MACVA,CAAC,CAACC,cAAc,EAAE;MAClB,IAAI,CAACd,UAAS,GAAI,IAAI;IACxB,CAAC;IACDe,SAAS,GAAG;MACV,IAAI,CAACf,UAAS,GAAI,KAAK;IACzB,CAAC;IACDgB,IAAI,CAACH,CAAC,EAAE;MACNA,CAAC,CAACC,cAAc,EAAE;MAClB,IAAI,CAACG,KAAK,CAACC,IAAI,CAACjB,KAAI,GAAIY,CAAC,CAACM,YAAY,CAAClB,KAAK;MAC5C,IAAI,CAACmB,gBAAgB,EAAE;MACvB,IAAI,CAACpB,UAAS,GAAI,KAAK;IACzB,CAAC;IACDoB,gBAAgB,GAAG;MACjB,IAAI,CAACnB,KAAI,GAAI,CAAC,GAAG,IAAI,CAACgB,KAAK,CAACC,IAAI,CAACjB,KAAK,CAAC;IACzC,CAAC;IACDoB,UAAU,CAACC,CAAC,EAAE;MACZ,IAAI,CAACrB,KAAK,CAACsB,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IACDE,WAAW,GAAG;MACZC,OAAO,CAACC,GAAG,CAAC,6BAA6B;MACzC;MACA,IAAIC,QAAO,GAAI,IAAIC,QAAQ,EAAE;MAC7B,KAAK,IAAIN,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACrB,KAAK,CAAC4B,MAAM,EAAEP,CAAC,EAAE,EAAE;QAC1CK,QAAQ,CAACG,MAAM,CAAC,IAAI,CAAC7B,KAAK,CAACqB,CAAC,CAAC,CAACS,IAAI,EAAE,IAAI,CAAC9B,KAAK,CAACqB,CAAC,CAAC,CAAC;QAClDG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ;MACxC;MACA7B,KAAI,CACCkC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAACL,QAAQ,EAC5C;QACEM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,EACA,CACCC,IAAI,CAACC,QAAO,IAAKV,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC,EACtCC,KAAK,CAACC,KAAI,IAAKZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;MACtC;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF;AACF","names":["axios","data","isDragging","files","icons","gif","jpg","jpeg","mkv","mov","mp4","mpeg","png","methods","dragover","e","preventDefault","dragleave","drop","$refs","file","dataTransfer","handleFileUpload","removeFile","i","splice","submitFiles","console","log","formData","FormData","length","append","name","post","headers","then","response","catch","error"],"sourceRoot":"","sources":["/home/student/Desktop/Nemo/Heroku/NemoFrontendGit/Nemo-Frontend/src/components/UploadFiles.vue"],"sourcesContent":["<template>\n  <div class=\"card mt-5\" style=\"width: auto\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Upload Files</h5>\n      <div class=\"dropzone-container\" @dragleave=\"dragleave\" @dragover=\"dragover\" @drop=\"drop\">\n        <input\n            id=\"fileInput\"\n            ref=\"file\"\n            accept=\".gif, .jpeg, .jpg, .mkv, .mov, .mp4, .mpeg, .png\"\n            class=\"hidden-input\"\n            multiple\n            name=\"file\"\n            type=\"file\"\n            @change=\"handleFileUpload\"\n        >\n        <div><img alt=\"\" class=upload-icon src=\"/upload-icon.png\"/></div>\n        <label class=\"\" for=\"fileInput\">\n          <span>Drag and Drop or <u class=\"choose-file-button\">choose files</u></span>\n        </label>\n      </div>\n      <div v-if=\"files.length\">\n        <div v-for=\"file in files\" :key=\"file.name\">\n          <div class=\"container border-1 shadow-sm mt-3\">\n            <table width=\"100%\">\n              <tr>\n                <td rowspan=\"2\">\n                  <img alt=\"\" class=\"custom_thumbnail\" v-bind:src=\"icons[file.name.split('.').pop()]\"/>&nbsp;\n                </td>\n                <td>{{ file.name }}&nbsp;</td>\n                <td>{{ Math.round(file.size / 1000) + \"Kb\" }}&nbsp;</td>\n                <td rowspan=\"2\" align=\"right\">\n                  <button class=\"remove-file-button\" type=\"button\" @click=\"removeFile(files.indexOf(file))\">\n                    <img alt=\"\" class=\"custom_thumbnail\" src=\"/red_x.png\"/>&nbsp;\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Success!!!!\n                </td>\n              </tr>\n            </table>\n          </div>\n        </div>\n        <div class=\"container bg-light\">\n          <button class=\"run-button\" type=\"button\" @click=\"submitFiles\">\n            Run\n          </button>\n      </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      isDragging: false,\n      files: [],\n      icons: {\n        gif: '/gif-icon.png',\n        jpg: '/jpeg-icon.png',\n        jpeg: '/jpeg-icon.png',\n        mkv: '/mkv-icon.png',\n        mov: '/mov-icon.png',\n        mp4: '/mp4-icon.png',\n        mpeg: '/mpeg-icon.png',\n        png: '/png-icon.png'\n      }\n    }\n  },\n  methods: {\n    dragover(e) {\n      e.preventDefault();\n      this.isDragging = true;\n    },\n    dragleave() {\n      this.isDragging = false;\n    },\n    drop(e) {\n      e.preventDefault();\n      this.$refs.file.files = e.dataTransfer.files;\n      this.handleFileUpload();\n      this.isDragging = false;\n    },\n    handleFileUpload() {\n      this.files = [...this.$refs.file.files];\n    },\n    removeFile(i) {\n      this.files.splice(i, 1);\n    },\n    submitFiles() {\n      console.log(\"The Run Button Was pressed.\")\n      // Prepare Form Data Containing Files\n      var formData = new FormData();\n      for (let i = 0; i < this.files.length; i++) {\n        formData.append(this.files[i].name, this.files[i]);\n        console.log('>> formData >>', formData)\n      }\n      axios\n          .post('http://127.0.0.1:5000', this.formData, \n          {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n          )\n          .then(response => console.log(response))\n          .catch(error => console.log(error))\n      // Axios Request to Back-End Server\n\n      // axios({\n      //   method: \"POST\",\n      //   url: 'https://nemo-backend.herokuapp.com/',\n      //   //url: 'https://nemo-backend.herokuapp.com/',\n      //   data: formData,\n      //   headers: {\"Content-Type\": \"multipart/form-data\"}\n      // })\n      //     .then(function () {\n      //       console.log(this.FormData)\n      //     })\n      //     .catch(function () {\n      //       console.log(\"failure\");\n      //     });\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.upload-icon {\n  opacity: 0.5;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 0.5em;\n}\n\n.choose-file-button {\n  cursor: pointer;\n  font-style: italic;\n  color: #adcdec;\n}\n\n.remove-file-button {\n  border: none;\n  background-color: white;\n  justify-content: center;\n}\n\n.run-button {\n  border: dashed;\n  border-radius: 25px;\n  margin-top: 2rem;\n  padding-right: 20px;\n  padding-left: 20px;\n  background-color: #f7fafc;\n  float: right;\n}\n\n.custom_thumbnail {\n  width: 40px;\n  height: 40px;\n\n}\n\n.dropzone-container {\n    padding: 1rem;\n    background: #f7fafc;\n    border: 2px dashed #e2e8f0;\n    margin-top: 1rem;\n    text-align: center;\n}\n\n.hidden-input {\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    width: 1px;\n    height: 1px;\n}\n\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}